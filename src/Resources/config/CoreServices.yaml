services:
  _defaults:
    #autowire: true
    #autoconfigure: true
    # t o d o
    bind:
      $mediaClass: "%pw.entity_media%"
      $pageClass: "%pw.entity_page%"
      $userClass: "%pw.entity_user%"
      $projectDir: "%kernel.project_dir%"
      $filterSets: "%pw.image_filter_sets%"
      $publicMediaDir: "%pw.public_media_dir%"
      $mediaDir: "%pw.media_dir%"
      $publicDir: "%pw.public_dir%"

  # --------
  # Me
  # --------
  Twig\Extension\StringLoaderExtension: ~
  Pushword\Core\PushwordCoreBundle: ~

  Pushword\Core\:
    autowire: true
    autoconfigure: true
    resource: "../../../src/*"
    exclude: "../../../src/{Extension,Repository,DependencyInjection,Entity,Migrations,Tests,Kernel.php}"

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  Pushword\Core\Controller\:
    autowire: true
    resource: "../../../src/Controller"
    tags: ["controller.service_arguments"]

  Pushword\Core\EventListener\UserListener:
    autowire: true
    tags:
      - { name: doctrine.orm.entity_listener, entity: "%pw.entity_user%", event: preUpdate }

  pushword.page_rendering.validator:
    class: Pushword\Core\Validator\Constraints\PageRenderingValidator
    arguments:
      - "%pw.apps%"
      - "@twig"
    tags:
      - { name: validator.constraint_validator, alias: page_rendering }

  Pushword\Core\Twig\AppExtension:
    tags:
      - "twig.extension"
    autowire: true

  pushword.user_create_command:
    autowire: true
    class: Pushword\Core\Command\UserCreateCommand
    tags: ["console.command"]

  # --------
  # Page
  # --------

  Pushword\Core\EventListener\PageListener:
    autowire: true
    tags:
      - { name: doctrine.orm.entity_listener, entity: "%pw.entity_page%", event: preRemove }

  Pushword\Core\Repository\PageRepositoryInterface:
    class: Pushword\Core\Repository\PageRepository
    arguments: ["@doctrine", "%pw.entity_page%"]
    tags:
      - { name: doctrine.repository_service }

  Pushword\Core\Component\EntityFilter\ManagerPoolInterface:
    class: Pushword\Core\Component\EntityFilter\ManagerPool
    autowire: true

  # --------
  # Media
  # --------

  Pushword\Core\Service\ImageManager:
    alias: pushword.media.cache_generator

  pushword.media.cache_generator:
    class: Pushword\Core\Service\ImageManager
    autowire: true

  pushword.media_command:
    class: Pushword\Core\Command\ImageManagerCommand
    autowire: true
    tags: ["console.command"]

  pushword.media_listener:
    class: Pushword\Core\EventListener\MediaListener
    autowire: true
    tags:
      - { name: kernel.event_listener, event: vich_uploader.pre_upload }
      - { name: kernel.event_listener, event: vich_uploader.post_upload }
      - { name: doctrine.orm.entity_listener, entity: "%pw.entity_media%", event: preUpdate }
      - { name: doctrine.orm.entity_listener, entity: "%pw.entity_media%", event: preRemove }
      #- { name: doctrine.orm.entity_listener, entity: Pushword\Core\Entity\Image, event: prePersist }

  pushword.media_repository:
    class: Pushword\Core\Repository\MediaRepository
    arguments: ["@doctrine", "%pw.entity_media%"]
    tags: ["doctrine.repository_service"]

  Pushword\Core\Repository\MediaRepository:
    arguments: ["@doctrine", "%pw.entity_media%"]
    tags: ["doctrine.repository_service"]

  Pushword\Core\Repository\UserRepository:
    arguments: ["@doctrine", "%pw.entity_user%"]
    tags: ["doctrine.repository_service"]

  # --------
  # TWIG extension
  # --------

  # dpolac.twig_lambda.extension:
  #   class: DPolac\TwigLambda\LambdaExtension
  #   tags: [{ name: twig.extension }]

  pushword.twig.extension.render_attributes:
    class: PiedWeb\RenderAttributes\TwigExtension
    public: false
    tags:
      - { name: twig.extension }

  twig.extension.intl:
    class: Twig\Extra\Intl\IntlExtension
    tags:
      - { name: twig.extension }

  # --------
  # Extending other bundles
  # --------

  # Vich
  # --------

  vich_uploader.pushword.namer_property:
    class: Pushword\Core\Service\VichUploadPropertyNamer
    public: true
    arguments: ['@Vich\UploaderBundle\Util\Transliterator']

  Pushword\Core\Service\VichUploadPropertyNamer:
    alias: vich_uploader.pushword.namer_property
    public: true
