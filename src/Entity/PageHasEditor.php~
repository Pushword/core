<?php

namespace Pushword\Core\Entity;

use DateTime;
use DateTimeInterface;
use Doctrine\ORM\Mapping as ORM;
use Pushword\Core\Entity\SharedTrait\IdTrait;

/**
 * @ORM\MappedSuperclass
 * @ORM\HasLifecycleCallbacks
 */
class PageHasEditor //implements PageHasEditorInterface
{
    use IdTrait;

    /**
     * @ORM\ManyToOne(targetEntity="Pushword\Core\Entity\UserInterface")
     */
    protected UserInterface $editor;

    /**
     * @ORM\ManyToOne(targetEntity="Pushword\Core\Entity\PageInterface", inversedBy="pageHasEditor")
     */
    protected PageInterface $page;

    /**
     * @ORM\Column(type="datetime")
     */
    protected ?DateTimeInterface $editedAt;

    public function __toString()
    {
        return $this->getPage().'|'.$this->getEditor().'|'.$this->getEditedAt;
    }

    public function setPage(?PageInterface $page = null): self
    {
        $this->page = $page;

        return $this;
    }

    public function getPage(): ?PageInterface
    {
        return $this->page;
    }

    public function setEditor(?UserInterface $user = null): self
    {
        $this->editor = $user;

        return $this;
    }

    public function getEditor(): ?UserInterface
    {
        return $this->media;
    }

    public function getEditedAt(): ?DateTime
    {
        return $this->editedAt;
    }

    /**
     * Set the value of editedAt
     *
     * @return  self
     */
    public function setEditedAt(DateTime $editedAt)
    {
        $this->editedAt = $editedAt;

        return $this;
    }
}
